--数据类型
1、数值型
整型（整数）：
非常小整数型 1字节 -128～127 0～255（无符号） TINYINIT
较小整数型 2字节 -32768～32767 SMALLINIT
中等大小整数型 3字节 0～16777215 MEDIUMIINT
标准整数型 4字节 -2147483648～2147483647 INT
大整数型 8字节 BIGINT
【可以添加属性：UNSIGNED】
浮点型（小数）：
FLOAT（M，N） 4字节 【长度M，保留小数点后N位】
DOUBLE（M，N） 8字节 【五舍六入】
DECIMAL（M，N） M+2字节 【定点数，以字符串形式存储数据， 更精确的保存数据，但是效率会有所折扣。】【四舍五入】
【浮点数会存在误差，因此在对数字敏感的时候，需要用定点数来存储！】
3、字符型
MySQL支持以单引号与双引号表示字符串类型。
如“MySQL”与 'MySQL'相同
char(M) 最大255 固定长度字符串
varchar(M) 最大255 可变长度字符串
char(4) varchar(4)// 永远比字符多一个字节
'' 4 '' 1字节
'a' 4 'a' 2字节
'abcd' 4 'abcd' 5字节
'abcdefg' 4 'abcdefgh' 5字节

char类型会截取尾部的空格；
示例： CREATETABLE IF NOT EXISTS tab(v varchar(4),c char(4));
INSERTINTO tab(v,c) VALUES(“ab ”,”ab ”);
SELECTCONCAT(v,”#”),CONCAT(c,”#”) FROM tab;

最佳实践：
固定长度，推荐使用char类型（可能会浪费一定空间）。
可变长度，推荐使用varchar类型（可能会付出一些性能损耗）

text 文本数据：文章，日志 长度：2^16-1
MEDIUMTEXT
LONGTEXT

blob 二进制数据：照片，电影 长度：2^16-1
MEDIUMBLOB
LONGBLOB
【虽然没法通过SQL语句将照片，电影，压缩包等二进制文件插入到数据库中， 但是我们可以通过C++/Java等编程语言将二进制文件读成二进制数据流，然 后保存到数据库中】
ENUM 枚举 1～2字节
ENUM(“one”,”two”,”three”,”four”)~65535
一次只能有一个值

SET集合 1，2，3，4，8字节
SET(“one”,”two”,”three”,”four”)~64
一次可以有多个值，用“，”隔开。
4、日期型
DATE YYYY-MM-DD //如果位数充足，可以不用加‘-’
TIME hh:mm:ss //位数充足，可以忽略‘：’，位数不足，从后面截取
DATETIME YYYY-MM-DDhh:mm:ss
TIMESTAMP YYYYMMDDhhmmss //位数不足时，不可忽略前导0
YEAR YYYY

--帮助
e.g:? int

--auto_increment 自增

--NOT NULL 不为空

--DEFAULT 默认值

--unique 唯一索引

--字符集修改
alter database character set utf8; #修改数据库的字符集，alter修改，更改
alter table t1 character set utf8; #修改数据表的字符集

--备份数据库
mysqldump-u root -p --default-character-set=gbk -d xsdemo >/home/xiaofang/backup.sql #dump 倾倒；倾卸

--还原数据库
mysql-u root -p xsdemo < /home/xiaofang/backup.sql

--修改表
altertable... #更多内容参见?Alter table;
e.g. altertable t1 add price double not null default 0.00;
altertable t1 add sex varchar(5) after name; #在姓名之后添加性别
altertable t1 add height double first; #在第一位置添加身高
altertable t1 modify sex char(3); #modify适用于改类型
altertable t1 change name username varchar(5);#change 既可以更改字段名，又可以更改类型
altertable t1 rename users; #直接修改表名
altertable t1 drop age; #删除字段
droptable if exists users; #删除数据表

--DDL
CREATE TABLE websites (
  id int(11) NOT NULL AUTO_INCREMENT,
  name char(20) NOT NULL DEFAULT '' COMMENT '站点名称',
  url varchar(255) NOT NULL DEFAULT '',
  alexa int(11) NOT NULL DEFAULT '0' COMMENT 'Alexa 排名',
  country char(10) NOT NULL DEFAULT '' COMMENT '国家',
  PRIMARY KEY (`id`,`country`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

--LIKE 模糊查询
_（任意一个字符）和%（0个或多个任意字符）两个通配符号
select* from products where name like '%Java%'; #查询名字中包含有java的数据

--RegExp 正则表达式
e.g. select* from products where name regexp '^java'; #查找所有以java开头的数据
select* from products where name regexp 's$'; #查找所有以s结尾的数据

--limit  限制显示个数
select* from where id < 10 order by id desc limit 7; #取前7条记录
select* from where id > 14 order by id asc limit 0,1; #limit0,1表示从第0个开始取，取1个

------------------------------MySQL常用内置函数------------------------------


说明：
1）可以用在SELECT/UPDATE/DELETE中，及where，orderby，having中
2）在函数里将字段名作为参数，变量的值就是字段所对应的每一行的值。
3）在程序设计语言如C++中提供的函数，MySQL大部分也提供了，关于MySQL函数的完整信息，请参阅《MySQL参考手册》


一、字符串函数【比较常用，需要掌握】
1、 concat(s1,s2,...,sn) #把传入的参数连接成一个字符串
selectconcat('abc','def');
selectconcat(name,' age is ',age) from users;


2、insert(str,m,n,inser_str) #将str的从m位置开始的n个字符替换为inser_str
selectinsert('abcdef',2,3,'123456');
selectinsert(name,3,2,'HAHA') from users;
selectinsert(name,2,2,'00') from users;


3、lower(str)/upper(str) #将字符串str转换成小写/大写
selectlower('HELLO'),upper('hello');
selectlower('HELLO') as 'HELLO'，upper('hello')as 'HELLO';
select* from users where upper(name) = 'AAA';


4、left(str,n)/right(str,n) #分别返回str最左边/最右边的n个字符，如果n<=> NULL 则任何东西不返回
selectleft('123',3),right('123456',3),left('123',NULL);


5、lpad(str,n,pad)/rpad(str,n,pad) #用字符串pad对str的最左边/最右边进行填充，知道满足str含有n个字符为止
selectname,lpad(name,10,'#'),rpad(name,10,'@') from users;


6、trim(str)/ltrim(str)/rtrim(str) #去除字符串str左右空格/左空格/右空格
selectconcat('#',trim(" abc "),'#'),concat('#',ltrim(' abc '),'#'),concat('#',rtrim(' abc '),'#');


7、replace(str,sear_str,sub_str) #将字符串str中所有出现的sear_str字符串替换为sub_str
select replace('abcdefgabcd','cd','XXX') ;


8、strcmp(str1,str2) #以ASCII码比较字符串str1，str2，返回-1（str1< str2）/0(str1= str2)/1(str1 > str2)
selectstrcmp('aa','bb'),strcmp('aa','aa'),strcmp('bb','aa');


9、substring(str,n,m) #返回字符串str中从n起，m个字符长度的字符串
selectsubstring('abcdef',2,3);
selectname,substring(name,1,2) as subname from users;


二、数值函数
1、abs(x) #返回x的绝对值
selectabs(10),abs(-10);
selectabs(age) from users;


2、ceil(x) #返回大于x的最小整数
3、floor(x) #返回小于x的最大整数
selectceil(2.1),ceil(2.5),ceil(2.9),floor(2.1),floor(2.5),floor(2.9);


4、mod(x,y) #返回x/y的模，与x%y作用相同
selectmod(null,11);


5、rand() #返回0～1之间的随机数
selectrand();
selectceil(rand() * 100); #取0～100之间的整数随机数
selectfloor(rand() * 100);


6、round(n,m) #返回n四舍五入之后含有m位小数的值，m值默认为0
selectround(1.23);
selectround(1.456,2);


7、truncate(n,m) #返回数字n被截断为m位小数的数值
selecttruncate(1.234,2);
selecttruncate(1.235,2),round(1.235,2);


三、日期函数
1、curdate() #返回当前日期
2、curtime() #返回当前时间
selectcurdate(),curtime();


3、now() #返回当前日期+时间
selectnow();


4、unix_timestamp(now())#返回unix当前时间的时间戳
selectunix_timestamp(now()); #从计算机元年（1971-1-100：00：00）到现在的秒数


5、from_unixtime() #将时间戳（整数）转换为“日期+时间（xx-xx-xxxx:xx:xx）”的形式
selectfrom_unixtime(1392853616);


6、week(now()) #返回当前时间是第几周
7、year(now()) #返回当前是XX年
8、hour(now())/hour(curtime()) #返回当前时间的小时数
9、minute(curtime()) #返回当期的分钟数
...
selectweek(now()),year(now()),hour(now());
selectweek(from_unixtime(1392853616)); #返回unix时间戳中的周期数


10、monthname(now())/monthname(curdate()) #返回当前月的英文名


11、date_format(now(),"%Y-%M-%D%H:%I%S") #将当期时间格式化
selectdate_format(now(),"%Y-%m-%d %H:%i%s");
selectdate_format(now(),"%y%m%d %H:%i%s");
四、流程控制函数
1、if(value,true,false) #如果value值为真，则返回true，否则，返回false
selectif (salary > 3000,'Hight','Low') from salary;
selectid,salary, if (salary <=> NULL,'NULL','NOT NULL') from salary;


2、ifnull(value1,value2)#如果value1不为空，则返回value1,不然返回value2
#可以用来进行空值替换
selectifnull(salary,0.00) from salary;


3、casewhen [value] then … else …end #如果value值为真，执行then之后的语句，不然执行eles后的语句，不要忘记end！
selectcase when salary <= 3000 then "Low" else "Hight"end from salary;


五、其他函数
1、database() #当前数据库
2、version() #当前数据库版本
3、user() #当前登录用户
selectdatabase();


4、inet_aton(ip) #ip地址的网络字节顺序
selectinet_aton('192.168.139.1');


5、inet_ntoa #返回数字所代表的ip
selectinet_ntoa(3232271105);


6、password(str) #返回加密的str字符串
selectpassword("123456"); #返回一个41位长的加密字符串，只是用于给MySQL系统用户进行加密
7、md5() #在应用程序中进行数据加密,比如在C++程序中

------------------------------------MySQL高级操作（上）----------------------------------


一、MySQL表复制
create table t2 like t1;               #复制表结构，t2可以学习到t1所有的表结构
insert into t2 select * from t1;    #复制表数据，但是这样还是会有缺陷，因为没有考虑到列的对应，因为t1与t2的表结构完全一致，所以此次操作才不会出错！
建议：
insert into t3(name) select name from t1; #指定复制的列

二、MySQL索引
1、直接创建索引
create index index_name on table_name(column_list);                #创建普通索引
create unique index index_name on table_name(colume_list);    #创建唯一索引，请在创建唯一索引之前确保该列没有重复值，不然，创建不成功！

2、直接删除索引
drop index index_name on table_name;

3、修改-创建索引
alter table table_name add index [index_name](colum_list);                #创建普通索引
alter table table_name add unique [index_name](column_list);            #创建唯一索引
alter table table_name add primary key [index_name](column_list);   #创建主键索引，如果不添加index_name,则使用column_list作为默认索引名

4、修改-删除索引
alter table table_name drop index index_name;            #删除普通/唯一索引
alter table table_name drop primary key;                      #删除主键索引

【推荐使用方式3、4】
【附】
1、查看索引：show index from t1 \G
2、alter table table_name modify id int not null;

三、MySQL视图
视图：通过一个条件，把一部分数据从一张表里面提取出来，形成一张中间表，这张表就是视图
注意：视图随着主表的改变而改变
1、创建视图
create view view_name as select *from table_naem where id > 4 and id <= 10;

3、查看创建了哪些视图
showtables; #视图就是一个中间表
3、查看视图中数据
select* from view_name; #与查看表数据相同

4、删除视图
drop view view_name;

四、MySQL内置函数补充
查看函数作用及简单示例：? function_name
e.g. ? lcase;

1、字符串函数
1）lcase(“string”)/ucase(“string”)           #转换成小写/大写，与lower(str)/upper(str)作用相同
2）length(“string”)                                   #返回字符串的长度
3）repeat(“string”,n)                                #将字符从重复n次
4）space(n)                                               #生成n个空格

2、数学函数
1）bin(decimal_number)                          #十进制转二进制
2）ceiling(n)                                             #作用与ceil相同，向下取整
3）sqrt(n)                                                  #开平方
4）max(col)/min(col)                               #取最大/最小值，聚合时使用
5）rand()                                                   #生成随机数
select * from table_name order by rand(); #使用rand函数作为排序基准

3、日期函数
1）datediff(expr1,expr2)                             #返回expr1和expr2相差的天数，如果expr1> expr2，则返回正值



-----------------------------------------------MySQL高级操作（下）-------------------------------------------------------


五、MySQL预处理语句
1、设置预处理stmt，传递一个数据作为where的判断条件
prepare stmt from “select * from table_name where id > ?”;

2、设置一个变量
set @i = 1;

3、执行预处理语句
execute stmt using @i;

4、删除预处理指令
drop prepare stmt;

六、MySQL事务处理
【注意】MyISAM存储引擎对事务并不支持，应该使用InnoDB存储引擎
[sql] view plain copy 在CODE上查看代码片派生到我的代码片
1、set autocommit = 0;              #关闭自动提交  
2、delete from t1 where id > 4;  
3、savepoint p1;                        #设置还原点  
4、delete from t1;  
5、rollback to p1;                       #回滚到p1还原点  
6、rollback;                                #回滚到最原始的还原点  
7、commit ;                                #提交数据到服务器  
8、set autocommit = 1;                #开启自动提交，关闭事务处理  



七、MySQL存储
1、创建一个存储p1()
[sql] view plain copy 在CODE上查看代码片派生到我的代码片
mysql>\d //                             #修改定界符为//  
mysql>create procedure p1()  
        ->begin  
        ->set @i = 0;  
        ->while @i < 100 do  
        ->insert into t2(name) values(concat("user",@i));  
        ->set @i = @i + 1;  
       ->end while;  
       ->end;//  
mysql>\d ;  

2、执行p1()
callp1();
3、查看procedure的status信息
showprocedure status \G

4、查看procedurep1的具体信息
show create procedure p1 \G

八、MySQL触发器
1、创建触发器
#创建一个名为t1的触发器，当向t1表中插入数据时，就引发动作：向t2表中插入数
[sql] view plain copy 在CODE上查看代码片派生到我的代码片
mysql>\d //  
mysql>create trigger t1 before inserton t1 for each row  
        ->begin  
        ->insert into t2(name) values(new.name);  
        ->end//  
mysql>\d ;  

#创建触发器t2，如果表t1删除数据，则引发触发器，表t2中的数据也相应删除
[sql] view plain copy 在CODE上查看代码片派生到我的代码片
mysql>\d //  
mysql>create trigger t2 before delete on t1 for each row  
       ->begin  
      ->delete from t2 where id =old.id;  
      ->end//  
mysql>\d ;  

#创建触发器t3，如果修改表t1则t2中的记录也相应修改
[sql] view plain copy 在CODE上查看代码片派生到我的代码片
mysql>\d //  
mysql>create trigger t3 before update on t1 for each row  
        ->begin  
        ->update t2 set id =new.id where id = old.id;  
        ->end//  
mysql>\d ;  

2、删除触发器
drop trigger trigger_name;

【附】删除表中所有数据：truncatetable_name; #速度更快，同时也可以清空auto_increment列表

九、重排auto_increment值
MySQL中自动增长的ID如何恢复？
1、清空表的时候，不要用delete from table_name;
而是：truncate [table] table_name;

或者
2、清空内容之后直接使用alter命令修改表
alter table table_name auto_increment = 1;
